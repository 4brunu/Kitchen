// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from chef.djinni

#include "NativeService.hpp"  // my header
#include "Marshal.hpp"
#include "NativeRunnable.hpp"

namespace djinni_generated {

NativeService::NativeService() : ::djinni::JniInterface<::naomi_gen::Service, NativeService>() {}

NativeService::~NativeService() = default;

NativeService::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeService::JavaProxy::~JavaProxy() = default;

void NativeService::JavaProxy::on_create() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onCreate);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeService::JavaProxy::on_start(const std::string & c_name, const std::shared_ptr<::naomi_gen::Runnable> & c_runnable) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onStart,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)),
                           ::djinni::get(::djinni_generated::NativeRunnable::fromCpp(jniEnv, c_runnable)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated

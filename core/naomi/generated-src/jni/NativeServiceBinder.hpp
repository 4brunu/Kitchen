// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from chef.djinni

#pragma once

#include "djinni_support.hpp"
#include "service_binder.hpp"

namespace djinni_generated {

class NativeServiceBinder final : ::djinni::JniInterface<::naomi_gen::ServiceBinder, NativeServiceBinder> {
public:
    using CppType = std::shared_ptr<::naomi_gen::ServiceBinder>;
    using CppOptType = std::shared_ptr<::naomi_gen::ServiceBinder>;
    using JniType = jobject;

    using Boxed = NativeServiceBinder;

    ~NativeServiceBinder();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeServiceBinder>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeServiceBinder>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeServiceBinder();
    friend ::djinni::JniClass<NativeServiceBinder>;
    friend ::djinni::JniInterface<::naomi_gen::ServiceBinder, NativeServiceBinder>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::naomi_gen::ServiceBinder
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        ::naomi_gen::load_type load_type() override;
        void on_error(const std::string & message) override;
        void on_load(const std::string & message, bool cache, const std::shared_ptr<::naomi_gen::SimpleCursor> & cursor) override;

    private:
        friend ::djinni::JniInterface<::naomi_gen::ServiceBinder, ::djinni_generated::NativeServiceBinder>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/siliconbear/kitchen/ServiceBinder") };
    const jmethodID method_loadType { ::djinni::jniGetMethodID(clazz.get(), "loadType", "()Lcom/siliconbear/kitchen/LoadType;") };
    const jmethodID method_onError { ::djinni::jniGetMethodID(clazz.get(), "onError", "(Ljava/lang/String;)V") };
    const jmethodID method_onLoad { ::djinni::jniGetMethodID(clazz.get(), "onLoad", "(Ljava/lang/String;ZLcom/siliconbear/kitchen/SimpleCursor;)V") };
};

}  // namespace djinni_generated

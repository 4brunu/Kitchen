@import "../application.djinni"

load_type = enum
{
	LAZY;
	STRICT;
	STATIC;
}

recipe = interface +c 
{
	get_dish(): dish;
	get_menu(): menu;
}

runnable = interface +c 
{
	run();
}

handler = interface +o +j 
{
    	post(runnable: runnable);
}

service = interface +o +j 
{
	on_create();
	on_start(name: string, runnable: runnable);
}

api = interface +c
{
	get_chef(): chef;
	static get_instance(root: string, handler: handler, service: service): api;
}

chef = interface +c 
{
	get_version(): string;
	grab(menu: menu): dish;
	add_recipe(recipe: recipe);
}

service_binder = interface +o +j 
{
	load_type(): load_type;
	on_load(message: string, cursor: simple_cursor);
}

dish = interface +c 
{
	serve(package_list: package, params: map<string, string>, binder: service_binder);
}

simple_cursor = interface +c 
{

}



//
//  sql_lib.h
//  payporte
//
//  Created by Constantine Kevin on 26/11/2015.
//  Copyright Â© 2015 PayPorte. All rights reserved.
//

#ifndef sql_lib_h
#define sql_lib_h

#include <string>
#include <memory>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>

#include "api.hpp"
#include "handler.hpp"
#include "service.hpp"
#include "sandwich.hpp"

#include "easySQLite/SqlCommon.h"
#include "easySQLite/SqlField.h"
#include "easySQLite/SqlDatabase.h"
#include "easySQLite/SqlTable.h"

#include <restful_mapper/api.h>
#include <restful_mapper/query.h>
#include <restful_mapper/internal/iso8601.h>
#include <restful_mapper/internal/utf8.h>

using namespace std;
using namespace oaktree_gen;

class Sandwich_ : public Sandwich {
	
	public:

	virtual string get_version() override {
		restful_mapper::Query q;
		string escaped = restful_mapper::Api::escape("Hej!#&?der");

		q("name").eq("Flaf");
		q("address").neq("England");
		q("id").gt(3).lt(q.field(escaped));
		q("zipcode").gte(1000);
		q("zipcode").lte(7000);
		
		return q.dump();
	};
};

class Api_ : public Api {

	public: 

	virtual shared_ptr<Sandwich> get_application() override {
		return make_shared<Sandwich_>();
	};
};

shared_ptr<Api> Api::get_instance(const string & root, const shared_ptr<Handler> & handler, const shared_ptr<Service> & service) {
	cout << root;

	if (handler == nullptr || service == nullptr) {
	}
	return make_shared<Api_>();
}

#endif /* sql_lib_h */



